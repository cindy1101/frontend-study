// ! 비동기 프로그래밍

// ? 비동기 
// : 아닐 비, 같을 동, 시기 기 : 시간이 같지 않다라는 의미

// ? 동기
// : 같을 동, 시기 기 : 같은 기간, 같은 주기

// ! 1. 비동기 프로그래밍이란? 
//   : 특정 코드의 실행 완료를 기다리지 않고, 다음 코드를 실행하는 프로그래밍 방식
//   : 프로그램의 실행 흐름을 차단(block) 하지 않고, '시간이 오래 소요'되는 작업을 처리하는데 유용하다.
//   : 네트워크 요청(서버와의 통신), 파일 I/O 등에 주로 사용

//   : 코드는 위 에서부터 아래로 실행한다 (순차적인 흐름) -> 동기 프로그래밍
//   : (예) 네이버, 광고 이미지 늦게 배치 됨 (느리게 배송되는 아이들은 추후에 나올 수 있도록?)

// ! 2. 비동기 VS 동기 프로그래밍의 차이점

// ? 비동기 프로그램 (Asynchronous)
// : 작업이 백그라운드에서 실행 : 주 실행 흐름을 차단하지 않고, 작업 완료 여부와 상관없이 다음 코드가 진행된다는 의미이다.
// : 동시에 여러 작업을 처리할 수 있다 (처리 가능) -> 작업 완료 시 콜백 함수나 프로미스를 통해 결과를 처리

// ? 동기 프로그램 (Synchronous)
// : 작업들이 순차적으로 실행 : 한 작업이 완료된 후에 다음 작업이 시작
// : 실행 순서가 보장되며, 한 작업이 끝나야 다음 작업을 수행할 로직 구현이 가능하다.


// ! 3. 자바스크립트에서의 비동기 프로그래밍 구현 (3가지 구현 방법)
// : 콜백함수 / 프로미스(Promise) / Async, Await

// * 세 가지 다 중요하지만 Async, Await 와 중요하다!

